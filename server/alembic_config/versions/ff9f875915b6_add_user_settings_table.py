"""Add user settings table

Revision ID: ff9f875915b6
Revises: bb9b28a04946
Create Date: 2025-05-02 12:23:26.586827

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ff9f875915b6"
down_revision: Union[str, None] = "bb9b28a04946"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_settings",
        sa.Column("enable_script_auto_save", sa.Boolean(), nullable=True),
        sa.Column("script_auto_save_interval", sa.Integer(), nullable=True),
        sa.Column("_user_id", sa.Integer(), nullable=False),
        sa.Column("_created_at", sa.DateTime(), nullable=True),
        sa.Column("_updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["_user_id"],
            ["user.id"],
            name=op.f("fk_user_settings__user_id_user"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("_user_id", name=op.f("pk_user_settings")),
    )
    with op.batch_alter_table("user_settings", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_settings__user_id"), ["_user_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_settings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_settings__user_id"))

    op.drop_table("user_settings")
    # ### end Alembic commands ###
