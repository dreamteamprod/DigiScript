"""Add CASCADE delete to script revision associations

Revision ID: ab2947d2a6d7
Revises: 49df18ea818d
Create Date: 2025-06-14 23:14:06.625007

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "ab2947d2a6d7"
down_revision: Union[str, None] = "49df18ea818d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("script_line_revision_association")
    op.create_table(
        "script_line_revision_association",
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("next_line_id", sa.Integer(), nullable=True),
        sa.Column("previous_line_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["next_line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["previous_line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"], ["script_revisions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("revision_id", "line_id"),
    )
    op.create_index(
        op.f("ix_script_line_revision_association_line_id"),
        "script_line_revision_association",
        ["line_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_script_line_revision_association_revision_id"),
        "script_line_revision_association",
        ["revision_id"],
        unique=False,
    )

    op.drop_table("script_cue_association")
    op.create_table(
        "script_cue_association",
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("cue_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cue_id"],
            ["cue.id"],
        ),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"], ["script_revisions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("revision_id", "line_id", "cue_id"),
    )
    op.create_index(
        op.f("ix_script_cue_association_revision_id"),
        "script_cue_association",
        ["revision_id"],
        unique=False,
    )

    op.drop_table("script_line_cuts")
    op.create_table(
        "script_line_cuts",
        sa.Column("line_part_id", sa.Integer(), nullable=False),
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["line_part_id"],
            ["script_line_parts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"], ["script_revisions.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("line_part_id", "revision_id"),
    )
    op.create_index(
        op.f("ix_script_line_cuts_line_part_id"),
        "script_line_cuts",
        ["line_part_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_script_line_cuts_revision_id"),
        "script_line_cuts",
        ["revision_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("script_line_cuts")
    op.drop_table("script_cue_association")
    op.drop_table("script_line_revision_association")

    op.create_table(
        "script_line_revision_association",
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("next_line_id", sa.Integer(), nullable=True),
        sa.Column("previous_line_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["next_line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["previous_line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"],
            ["script_revisions.id"],
        ),
        sa.PrimaryKeyConstraint("revision_id", "line_id"),
    )

    op.create_table(
        "script_cue_association",
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.Column("line_id", sa.Integer(), nullable=False),
        sa.Column("cue_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cue_id"],
            ["cue.id"],
        ),
        sa.ForeignKeyConstraint(
            ["line_id"],
            ["script_lines.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"],
            ["script_revisions.id"],
        ),
        sa.PrimaryKeyConstraint("revision_id", "line_id", "cue_id"),
    )

    op.create_table(
        "script_line_cuts",
        sa.Column("line_part_id", sa.Integer(), nullable=False),
        sa.Column("revision_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["line_part_id"],
            ["script_line_parts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revision_id"],
            ["script_revisions.id"],
        ),
        sa.PrimaryKeyConstraint("line_part_id", "revision_id"),
    )
    # ### end Alembic commands ###
