"""Add user settings

Revision ID: a39ac9e9f085
Revises: a44e01459595
Create Date: 2025-04-19 11:37:43.556499

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a39ac9e9f085"
down_revision: Union[str, None] = "a44e01459595"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("settings_type", sa.String(), nullable=True),
        sa.Column("settings", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_user_settings_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_settings")),
    )
    with op.batch_alter_table("user_settings", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_settings_settings_type"),
            ["settings_type"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_user_settings_user_id"), ["user_id"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_settings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_settings_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_settings_settings_type"))

    op.drop_table("user_settings")
    # ### end Alembic commands ###
